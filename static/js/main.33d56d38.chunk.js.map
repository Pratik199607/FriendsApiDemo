{"version":3,"sources":["constants.js","reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","action.js","index.js"],"names":["CHANGE_SEARCH_FIELD","REQUESTS_ROBOTS_PENDING","REQUESTS_ROBOTS_SUCESS","REQUESTS_ROBOTS_FAILED","initialStateSearch","searchField","initialStateRobots","isPending","robots","error","Card","name","email","username","className","src","alt","CardList","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","App","this","onRequestRobots","onSearch","searchFriend","filter","robot","toLowerCase","includes","Component","connect","state","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33d56d38.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\n\r\nexport const REQUESTS_ROBOTS_PENDING = \"REQUESTS_ROBOTS_PENDING\";\r\nexport const REQUESTS_ROBOTS_SUCESS = \"REQUESTS_ROBOTS_SUCESS\";\r\nexport const REQUESTS_ROBOTS_FAILED = \"REQUESTS_ROBOTS_FAILED\";\r\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUESTS_ROBOTS_PENDING,\r\n\tREQUESTS_ROBOTS_SUCESS,\r\n\tREQUESTS_ROBOTS_FAILED,\r\n} from \"./constants.js\";\r\n\r\n// Reducer Logic for Search\r\nconst initialStateSearch = {\r\n\tsearchField: \"\",\r\n};\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n// Reducer Logic for Request\r\nconst initialStateRobots = {\r\n\tisPending: false,\r\n\trobots: [],\r\n\terror: \"\",\r\n};\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUESTS_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, { isPending: true });\r\n\t\tcase REQUESTS_ROBOTS_SUCESS:\r\n\t\t\treturn Object.assign({}, state, { robots: action.payload, isPending: false });\r\n\t\tcase REQUESTS_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, { error: action.payload, isPending: false });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n// import ReactDom from \"react-dom\";\r\n\r\nconst Card = ({ name, email, username }) => {\r\n\treturn (\r\n\t\t<div className=\"card__container\">\r\n\t\t\t<img src={`https://robohash.org/${name}?set=set5`} alt=\"alt text\" />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<h4>nickname: {username}</h4>\r\n\t\t\t\t<h4>mailID: {email}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./CardList.css\";\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div className=\"cardList__container\">\r\n\t\t\t{robots.map((user, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\t\tusername={robots[i].username}\r\n\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"custText\"\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"Search friend\"\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n\treturn <div style={{ overflowY: \"scroll\", height: \"600px\" }}>{props.children}</div>;\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\n// import { robots } from \"../robots\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport { setSearchField, requestRobots } from \"../action\";\r\nimport \"./App.css\";\r\n// import { requestRobots } from \"../reducers\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonSearch: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots()),\r\n\t};\r\n};\r\nclass App extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestRobots();\r\n\t}\r\n\trender() {\r\n\t\tconst { searchField, onSearch, robots, isPending } = this.props;\r\n\t\tconst searchFriend = robots.filter((robot) => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t});\r\n\t\treturn isPending ? (\r\n\t\t\t<h1>Loading...</h1>\r\n\t\t) : (\r\n\t\t\t<div className=\"container \">\r\n\t\t\t\t<h1 className=\"customtext\">FriendsAPI</h1>\r\n\t\t\t\t<SearchBox searchChange={onSearch} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots={searchFriend} />\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUESTS_ROBOTS_PENDING,\r\n\tREQUESTS_ROBOTS_SUCESS,\r\n\tREQUESTS_ROBOTS_FAILED,\r\n} from \"./constants.js\";\r\n\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text,\r\n});\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUESTS_ROBOTS_PENDING });\r\n\tfetch(\"https://my-json-server.typicode.com/Pratik199607/FriendiApiJson/user\")\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => dispatch({ type: REQUESTS_ROBOTS_SUCESS, payload: data }))\r\n\t\t.catch((error) => dispatch({ type: REQUESTS_ROBOTS_FAILED, payload: error }));\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { searchRobots, requestRobots } from \"./reducers\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport \"tachyons\";\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}